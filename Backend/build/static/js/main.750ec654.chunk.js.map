{"version":3,"sources":["logo.svg","Components/Firebase/context.js","Components/Firebase/firebase.js","Components/Firebase/index.js","Components/Navigation/MenuItems.js","Components/Navigation/Navigation.js","Components/SearchBar/SearchBar.js","Components/StreamCard/StreamCard.js","Components/StreamCardManager/StreamCardManager.js","Components/Home/Home.js","Components/SignUp/SignUp.js","constants/routes.js","Components/Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","require","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","app","initializeApp","this","MenuItems","title","url","Navigation","className","src","height","map","item","i","key","to","SearchBar","useState","search","setSearch","Container","id","Form","Control","placeholder","value","onChange","event","newSearch","target","Button","type","StreamCard","user_name","viewer_count","preview","thumbnail_url","simage","profile_image_url","gname","game_name","name","viewcount","card","index","Card","href","Img","variant","Title","Text","StreamCardManager","cards","setCards","a","fetch","then","checkStatus","resp","json","data","newCards","length","thumbnail","_data","replace","push","platform","user_id","game_id","ids","catch","handleError","useEffect","fetchTwitchData","Row","Col","xs","md","lg","response","ok","Error","statusText","err","console","log","Home","INITIAL_STATE","conPassword","error","SignUpFormBase","setState","onSubmit","preventDefault","state","history","aria-describedby","bind","muted","SignUpForm","compose","withRouter","SignUp","LoginFormBase","authUser","user","uid","set","merge","LoginForm","Login","listener","onAuthStateChanged","path","component","HomePage","SignUpPage","LoginPage","Boolean","window","location","hostname","match","ReactDOM","render","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.750ec654.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nrequire('dotenv').config();\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    this.auth = app.auth();\r\n  }\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n  this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n}\r\n\r\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","export const MenuItems = [\r\n    {\r\n        title: 'Landing',\r\n        url: '/'\r\n    },\r\n    {\r\n        title: 'Home',\r\n        url: '/home'\r\n    },\r\n    {\r\n        title: 'Sign Up',\r\n        url: '/signup'\r\n    },\r\n    {\r\n        title: 'Sign In',\r\n        url: '/login'\r\n    },\r\n]","import React from 'react';\r\nimport { MenuItems } from \"./MenuItems\"\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <nav className=\"NavbarItems\">\r\n            <h1 className=\"navbar-logo\"><img src=\"https://media.discordapp.net/attachments/766950457381486606/767419101848797204/unknown.png\" height=\"75px\" />StreamPlus.</h1>\r\n            <ul className=\"nav-menu\">\r\n                {MenuItems.map((item, i) => {\r\n                    return (\r\n                        <li className=\"d-flex align-items-center\" key={i}><Link to={item.url} className=\"nav-links\">{item.title}</Link></li>\r\n                    );\r\n                })}\r\n\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n//<li className=\"d-flex align-items-center\"> <SignOut className=\"nav-links\"></SignOut> </li>\r\n","import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport './SearchBar.css'\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction SearchBar() {\r\n    const [search, setSearch] = useState('');\r\n\r\n    const changeSearch = (event) => {\r\n        var newSearch = event.target.value;\r\n        setSearch(newSearch);\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"d-flex align-items-center\" id=\"searchBar\">\r\n            <Form.Control id=\"input-search\" placeholder=\"Search Streamer...\" className=\"input\" value={search} onChange={changeSearch} />\r\n            <Button className=\"\" type='search' id=\"search-button\">Search</Button>\r\n        </Container>\r\n    )\r\n}\r\nexport default SearchBar;","import React from \"react\";\r\n\r\nimport './StreamCard.css';\r\n\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nfunction StreamCard(props) {\r\n  let { user_name, title, viewer_count, thumbnail_url, profile_image_url, game_name } = props;\r\n\r\n  const cardInfoTest = [\r\n    {\r\n      preview:\r\n        thumbnail_url,\r\n      simage:\r\n        profile_image_url,\r\n      gname: game_name,\r\n      title: title,\r\n      name: user_name,\r\n      viewcount: viewer_count\r\n    }\r\n  ];\r\n\r\n  const renderCard = (card, index) => {\r\n    return (\r\n      <Card className=\"card\" key={index} >\r\n        <a href={\"https://www.twitch.tv/\" + user_name}><Card.Img className=\"preview\" variant=\"top\" src={card.preview} /></a>\r\n        <Card.Img className=\"simage\" src={card.simage} />\r\n        <Card.Title className=\"title\">{card.title}</Card.Title>\r\n        <Card.Text className=\"name\">{card.name}</Card.Text>\r\n        <Card.Text className=\"viewcount\">{card.viewcount} viewers</Card.Text>\r\n        <Card.Text className=\"gname\">{card.gname} </Card.Text>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return (cardInfoTest.map(renderCard));\r\n}\r\nexport default StreamCard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport StreamCard from '../StreamCard/StreamCard';\r\n\r\nfunction StreamCardManager() {\r\n  let [cards, setCards] = useState([]);\r\n  let [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchTwitchData();\r\n  }, [search]);\r\n\r\n  async function fetchTwitchData() {\r\n    await fetch('/twitch/getStreams' + search)\r\n    .then(checkStatus)\r\n    .then(resp => resp.json())\r\n    .then(data => {\r\n      let newCards = [];\r\n      for (let i = 0; i < data.length; i++) {\r\n        let thumbnail = data[i]._data.thumbnail_url.replace(\"\\{width\\}\", 286);\r\n        thumbnail = thumbnail.replace(\"\\{height\\}\", 143);\r\n        newCards.push({\r\n          platform: \"twitch\",\r\n          thumbnail_url: thumbnail,\r\n          user_name: data[i]._data.user_name,\r\n          title: data[i]._data.title,\r\n          viewer_count: data[i]._data.viewer_count,\r\n          user_id: data[i]._data.user_id,\r\n          game_id: data[i]._data.game_id\r\n        });\r\n      }\r\n      return newCards;\r\n    })\r\n    .then(async (newCards) => {\r\n      let ids= []\r\n      for (let i = 0; i < newCards.length; i++) {\r\n        ids.push(newCards[i].user_id);\r\n      }\r\n      await fetch('/twitch/getUsersByIds?ids=' + ids)\r\n      .then(checkStatus)\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          newCards[i].profile_image_url = data[i]._data.profile_image_url;\r\n        }\r\n      })\r\n      .catch(handleError);\r\n      return newCards;\r\n    })\r\n    .then(async (newCards) => {\r\n      for (let i = 0; i < newCards.length; i++) {\r\n        await fetch('/twitch/getGameById?id=' + newCards[i].game_id)\r\n        .then(checkStatus)\r\n        .then(resp => resp.json())\r\n        .then(data => {\r\n          newCards[i].game_name = data._data.name;\r\n        })\r\n        .catch(handleError);\r\n      }\r\n      return newCards;\r\n    })\r\n    .then((newCards) => {setCards(newCards)})\r\n    .catch(handleError);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <SearchBar/>\r\n      <Row>\r\n        {cards.map((json, i) => { return (\r\n            <Col xs={12} md={6} lg={3} key={i} className=\"d-flex justify-content-center mb-4\">\r\n              <StreamCard className=\"\" {... json} />\r\n            </Col> ) }\r\n            )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default StreamCardManager;\r\n\r\nfunction checkStatus(response) {\r\n  if (response.ok) {\r\n    return response;\r\n  }\r\n  throw Error(\"Error in request: \" + response.statusText);\r\n}\r\n\r\nfunction handleError(err) {\r\n  console.log(err)\r\n}","import React from \"react\";\r\n\r\nimport StreamCardManager from '../StreamCardManager/StreamCardManager';\r\nfunction Home() {\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <StreamCardManager/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport './SignUp.css';\r\n\r\nimport { withFirebase} from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction SignUp() {\r\n  return (\r\n    <SignUpForm />\r\n  );\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  conPassword: '',\r\n  error: null,\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.firebase.doCreateUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      email,\r\n      password,\r\n      conPassword,\r\n      error,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"vert-center d-flex justify-content-center align-items-center\">\r\n        <Container className=\"form-container mb-5\">\r\n          <Row>\r\n            <Col>\r\n              <Form onSubmit={this.onSubmit}>\r\n                <h2>Sign Up</h2>\r\n                <Form.Control type=\"email\" id=\"input-email\" placeholder=\"Email\" name=\"email\" className=\"input\" value={email} onChange={this.onChange}/>\r\n                <Form.Control type=\"password\" id=\"input-password\" aria-describedby=\"password-help-block\" placeholder=\"New Password\"  name=\"password\" className=\"input\" value={password} onChange={this.onChange.bind(this)}/>\r\n                <Form.Text id=\"password-help-block\" muted>\r\n                  Please put in at least six characters.\r\n                </Form.Text>\r\n                <Form.Control type=\"password\" id=\"input-confirm-password\" placeholder=\"Confirm Password\"  className=\"input\" name=\"conPassword\" value={conPassword} onChange={this.onChange.bind(this)}/>\r\n                <Button type=\"submit\" id=\"submit-button\">Submit</Button>\r\n                <Link to={ROUTES.LOGIN}>Already signed up? Login</Link>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignUpFormBase);\r\n\r\nexport default SignUp;\r\n\r\nexport { SignUpForm };","export const LANDING = '/';\r\nexport const HOME = '/home';\r\nexport const LOGIN = '/login';\r\nexport const SIGN_UP = '/signup';","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport './Login.css';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction Login() {\r\n  return (\r\n    <LoginForm />\r\n  );\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  conPassword: '',\r\n  error: null,\r\n};\r\n\r\nclass LoginFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.firebase.doCreateUserWithEmailAndPassword(this.email, this.password).then(authUser => {\r\n      // Create a user in your Firebase realtime database\r\n      return this.props.firebase.user(authUser.user.uid).set(\r\n        {\r\n          uid: authUser.user.uid,\r\n        },\r\n        { merge: true },\r\n      );\r\n    })\r\n      .then(() => this.props.history.push(ROUTES.HOME))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      email,\r\n      password,\r\n      conPassword,\r\n      error,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"vert-center d-flex justify-content-center align-items-center\">\r\n        <Container className=\"form-container mb-5\">\r\n          <Row>\r\n            <Col>\r\n              <Form onSubmit={this.onSubmit}>\r\n                <h2>Login</h2>\r\n                <Form.Control type=\"email\" id=\"input-email\" placeholder=\"Email\" className=\"input\" value={email} onChange={this.onChange}/>\r\n                <Form.Control type=\"password\" id=\"input-password\" aria-describedby=\"password-help-block\" placeholder=\"Password\"  className=\"input\" value={password} onChange={this.onChange}/>\r\n                <Button type=\"submit\" id=\"submit-button\">Login</Button>\r\n                <Link to={ROUTES.SIGN_UP}>New account? Sign up</Link>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(LoginFormBase);\r\n\r\nexport default Login;\r\n\r\nexport { LoginForm };","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as ROUTES from './constants/routes';\nimport { withFirebase } from './Components/Firebase';\n\nimport Navigation from './Components/Navigation/Navigation';\nimport HomePage from './Components/Home/Home';\n//import LandingPage from './Components/Landing/Landing'; <Route exact path ={ROUTES.LANDING} component={LandingPage}/>\nimport SignUpPage from './Components/SignUp/SignUp';\nimport LoginPage from './Components/Login/Login';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: null,\n    }\n  }\n\n  componentDidMount() {\n    this.listener = this.props.firebase.auth.onAuthStateChanged(\n      authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      },\n    );\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navigation authUser={this.state.authUser} />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route path={ROUTES.LOGIN} component={LoginPage} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withFirebase(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport Firebase, { FirebaseContext } from './Components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}